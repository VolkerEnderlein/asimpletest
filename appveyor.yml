version: 0.0.1-{branch}-ci-{build}

branches:
  only:
  - main
  - /v\d*\.\d*\.\d*/

# do not build feature branches with open pull requests
skip_branch_with_pr: true

#shallow clone does not work when submodules are involved!
#shallow_clone: true

matrix:
  fast_finish: true # set this flag to immediately finish build once one of the jobs fails.

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_GENERATOR: 'Visual Studio 16 2019'
      CMAKE_ARCHITECTURE: Win32
      CMAKE_PLATFORM: x86
      COMPILER_ID: msvc16

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      CMAKE_GENERATOR: 'Visual Studio 16 2019'
      CMAKE_ARCHITECTURE: x64
      CMAKE_PLATFORM: x64
      COMPILER_ID: msvc16

#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
#      CMAKE_GENERATOR: 'Visual Studio 17 2022'
#      CMAKE_ARCHITECTURE: Win32
#      CMAKE_PLATFORM: x86
#      COMPILER_ID: msvc17
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
#      CMAKE_GENERATOR: 'Visual Studio 17 2022'
#      CMAKE_ARCHITECTURE: x64
#      CMAKE_PLATFORM: x64
#      COMPILER_ID: msvc17

install:
  - cmd: |
      choco install jq
      rem Work around for outdated curl version giving problems with GitHub Authentication when redirected.
      set PATH=%APPVEYOR_BUILD_FOLDER%\downloads\doxygen-1.8.14;C:\msys64\%COMPILER_ID%\bin;C:\msys64\usr\bin\;%PATH%
      curl --version
      cd %APPVEYOR_BUILD_FOLDER%
  - git submodule update --init --recursive

# Assumes that we use the vx.y.z tagging scheme (e.g. v1.0.0)
before_build:
  - cmd: |
      cmake -S . -B build -G "%CMAKE_GENERATOR%" -A %CMAKE_ARCHITECTURE% -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%\installation -DCMAKE_PREFIX_PATH=%APPVEYOR_BUILD_FOLDER%\downloads

build_script:
  - cmd: |
      set BUILD_TOOL_OPTIONS=/nologo /verbosity:minimal /maxcpucount /property:MultiProcessorCompilation=true;CL_MPCount=3
      cmake --build build --target INSTALL --config Debug   -- %BUILD_TOOL_OPTIONS%
      cmake --build build --target INSTALL --config Release -- %BUILD_TOOL_OPTIONS%

after_build:
  - cmd: |
      cd %APPVEYOR_BUILD_FOLDER%
      if defined APPVEYOR_REPO_TAG_NAME (set CI_REPO_VERSION=%APPVEYOR_REPO_TAG_NAME:~1%) else (set CI_REPO_VERSION=latest)
      set BUILD_ARCHIVE=%APPVEYOR_PROJECT_NAME%-%CI_REPO_VERSION%-%COMPILER_ID%-%CMAKE_PLATFORM%.zip
      7z a -tzip %BUILD_ARCHIVE% installation
      C:\msys64\usr\bin\md5sum.exe -b %BUILD_ARCHIVE% > %BUILD_ARCHIVE%.md5
      C:\msys64\usr\bin\sha256sum.exe -b %BUILD_ARCHIVE% > %BUILD_ARCHIVE%.sha256
      appveyor DownloadFile https://ci.appveyor.com/api/buildjobs/%APPVEYOR_JOB_ID%/log -FileName %APPVEYOR_PROJECT_NAME%-%CI_REPO_VERSION%-%COMPILER_ID%-%CMAKE_PLATFORM%.log

artifacts:
  - path: $(APPVEYOR_PROJECT_NAME)*.zip
    name: CIArchives
  - path: $(APPVEYOR_PROJECT_NAME)*.log
    name: logs
  - path: $(APPVEYOR_PROJECT_NAME)*.md5
    name: CImd5
  - path: $(APPVEYOR_PROJECT_NAME)*.sha256
    name: CIsha256

test_script:
  - cmd: |
      cd build
      ctest -C Release -VV

notifications:
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
      - Entwickler@ifm-chemnitz.de
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true

#deploy:
#
#  # Deploy to GitHub Releases
#  - provider: GitHub
#    auth_token:
#      secure: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx # your encrypted token from GitHub
#    artifact: CIArchives, CImd5, CIsha256
#    tag: $(APPVEYOR_REPO_TAG_NAME)
#    description: 'Release build'
#    draft: true
#    prerelease: true
#    force_update: true
#    on:
#      APPVEYOR_REPO_TAG: true       # deploy on tag push only
